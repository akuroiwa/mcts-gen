# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2025, Akihiro Kuroiwa and Gemini
# This file is distributed under the same license as the Generic MCTS
# Framework package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: Generic MCTS Framework 0.0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-09 21:46+0900\n"
"PO-Revision-Date: 2025-10-10 21:45+0900\n"
"Last-Translator: Gemini <gemini@google.com>\n"
"Language: ja\n"
"Language-Team: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../modules.rst:2
msgid "API Reference"
msgstr "APIリファレンス"

#: ../../modules.rst:5
msgid "Core Services"
msgstr "コアサービス"

#: mcts_gen.services.ai_gp_simulator.AiGpSimulator:1 of
msgid ""
"A stateful simulator that encapsulates an MCTS engine and provides a set "
"of generic, game-agnostic tools for an AI agent."
msgstr "MCTSエンジンをカプセル化し、AIエージェント向けに汎用的でゲームに依存しないツールのセットを提供するステートフルなシミュレータ。"

#: mcts_gen.services.ai_gp_simulator.AiGpSimulator.get_best_move:1 of
msgid "Retrieves the best move found so far."
msgstr "これまでに見つかった最善手を取得します。"

#: mcts_gen.services.ai_gp_simulator.AiGpSimulator.get_possible_actions:1 of
msgid "Retrieves the list of all possible actions from the current root state."
msgstr "現在のルート状態から可能なすべてのアクションのリストを取得します。"

#: mcts_gen.services.ai_gp_simulator.AiGpSimulator.get_simulation_stats:1 of
msgid "Returns the current state of the simulation variables."
msgstr "シミュレーション変数の現在の状態を返します。"

#: mcts_gen.services.ai_gp_simulator.AiGpSimulator.reinitialize_mcts:1 of
msgid "Starts a new MCTS simulation for a given game."
msgstr "指定されたゲームの新しいMCTSシミュレーションを開始します。"

#: mcts_gen.services.ai_gp_simulator.AiGpSimulator.run_mcts_round:1 of
msgid "Executes a single MCTS round and updates the simulation state."
msgstr "単一のMCTSラウンドを実行し、シミュレーションの状態を更新します。"

#: mcts_gen.services.mcts_engine.MCTSNode:1 of
msgid ""
"Represents a node in the Monte Carlo Search Tree. Inherits from "
"AntLionTreeNode to ensure full compatibility."
msgstr "モンテカルロ探索木におけるノードを表します。完全な互換性を確保するため、AntLionTreeNode を継承します。"

#: mcts_gen.services.mcts_engine.McpMcts:1 of
msgid "An MCTS engine that uses UCT (from parent) and AI value estimation."
msgstr "UCT（親から継承）とAIの価値評価を使用するMCTSエンジン。"

#: mcts_gen.services.mcts_engine.McpMcts.dl_method:1 of
msgid "Overrides parent to use the AI's value prediction."
msgstr "親をオーバーライドしてAIの価値予測を使用します。"

#: mcts_gen.services.mcts_engine.McpMcts.expand:1 of
msgid ""
"Uses a pre-filtered list of actions if provided, otherwise gets all "
"actions."
msgstr "提供されている場合は事前にフィルタリングされたアクションのリストを使用し、そうでない場合はすべてのアクションを取得します。"

#: ../../modules.rst:14
msgid "Base Models"
msgstr "ベースモデル"

#: mcts_gen.models.game_state.GameStateBase:1 of
msgid ""
"Abstract base class for any game environment that can be used with "
"McpMcts."
msgstr "McpMctsで使用できるすべてのゲーム環境の抽象基底クラス。"

#: mcts_gen.games.shogi_mcts.ShogiGameState.getCurrentPlayer:1
#: mcts_gen.models.game_state.GameStateBase.getCurrentPlayer:1 of
msgid "Return +1 if it's player one's turn, -1 if it's player two's turn."
msgstr "プレイヤー1の手番なら+1、プレイヤー2の手番なら-1を返します。"

#: mcts_gen.models.game_state.GameStateBase.getPossibleActions:1 of
msgid ""
"Return a list of all possible actions from this state. The actions MUST "
"be serializable and preferably human-readable strings (e.g., USI for "
"shogi) to allow AI agents to process them."
msgstr "この状態から可能なすべてのアクションのリストを返します。アクションは、AIエージェントが処理できるように、シリアライズ可能で、できれば人間が読める文字列（例：将棋のUSI）でなければなりません。"

#: mcts_gen.games.shogi_mcts.ShogiGameState.getReward:1
#: mcts_gen.models.game_state.GameStateBase.getReward:1 of
msgid ""
"Return the reward for the current player if the game is terminal. "
"Convention: +1 (win), -1 (loss), 0 (draw)."
msgstr "ゲームが終了している場合、現在のプレイヤーの報酬を返します。規約：+1（勝ち）、-1（負け）、0（引き分け）。"

#: mcts_gen.games.shogi_mcts.ShogiGameState.isTerminal:1
#: mcts_gen.models.game_state.GameStateBase.isTerminal:1 of
msgid "Return True if this state is terminal (game over)."
msgstr "この状態が終端（ゲームオーバー）であればTrueを返します。"

#: mcts_gen.models.game_state.GameStateBase.takeAction:1 of
msgid "Return the new GameState after applying the given action."
msgstr "指定されたアクションを適用した後の新しいGameStateを返します。"

#: ../../modules.rst:20
msgid "Game Modules"
msgstr "ゲームモジュール"

#: ../../modules.rst:22
msgid ""
"This framework can be extended with different games. Below are the "
"provided examples."
msgstr "このフレームワークは、さまざまなゲームで拡張できます。以下に提供されている例を示します。"

#: mcts_gen.games.dummy_game:1 of
msgid "A dummy game implementation (Tic-Tac-Toe) for testing and demonstration."
msgstr "テストおよびデモンストレーション用のダミーゲーム実装（三目並べ）。"

#: mcts_gen.games.dummy_game.TicTacToeDummy:1 of
msgid "A simplified Tic-Tac-Toe game state for testing the MCTS engine."
msgstr "MCTSエンジンをテストするための単純化された三目並べのゲーム状態。"

#: mcts_gen.games.dummy_game.TicTacToeDummy.getCurrentPlayer:1 of
msgid "Returns the current player."
msgstr "現在のプレイヤーを返します。"

#: mcts_gen.games.dummy_game.TicTacToeDummy.getPossibleActions:1 of
msgid "Returns a list of possible moves (empty squares)."
msgstr "可能な手のリスト（空のマス）を返します。"

#: mcts_gen.games.dummy_game.TicTacToeDummy.getReward:1 of
msgid "Returns the reward for the game outcome."
msgstr "ゲーム結果の報酬を返します。"

#: mcts_gen.games.dummy_game.TicTacToeDummy.isTerminal:1 of
msgid "Checks if the game is over (no more moves)."
msgstr "ゲームが終了したかどうか（これ以上手がないか）をチェックします。"

#: mcts_gen.games.dummy_game.TicTacToeDummy.takeAction:1 of
msgid "Applies a move and returns the new game state."
msgstr "手を適用し、新しいゲーム状態を返します。"

#: mcts_gen.games.shogi_mcts.ShogiGameState:1 of
msgid "Implements the game state for Shogi using the python-shogi library."
msgstr "python-shogiライブラリを使用して将棋のゲーム状態を実装します。"

#: mcts_gen.games.shogi_mcts.ShogiGameState.getPossibleActions:1 of
msgid "Returns a list of legal moves in USI string format."
msgstr "合法な手のリストをUSI文字列形式で返します。"

#: mcts_gen.games.shogi_mcts.ShogiGameState.takeAction:1 of
msgid "Takes a shogi.Move object and returns the new state."
msgstr "shogi.Moveオブジェクトを受け取り、新しい状態を返します。"

#: mcts_gen.games.shogi_mcts.ShogiGameState.to_dict:1 of
msgid "Serializes the game state to a dictionary for logging."
msgstr "ロギングのためにゲームの状態を辞書にシリアライズします。"

